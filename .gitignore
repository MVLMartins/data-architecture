# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Compiled class file
*.class

# Log file
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
**.jar
**.war
**.nar
**.ear
**.zip
**.tar.gz
**.rar

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
kafka-java-introduce/hs_err_pid*

kafka-java-introduce/target/
kafka-java-introduce/pom.xml.tag
kafka-java-introduce/pom.xml.releaseBackup
kafka-java-introduce/pom.xml.versionsBackup
kafka-java-introduce/pom.xml.next
kafka-java-introduce/release.properties
kafka-java-introduce/dependency-reduced-pom.xml
kafka-java-introduce/buildNumber.properties
kafka-java-introduce/.mvn/timing.properties
# https://github.com/takari/maven-wrapper#usage-without-binary-jar
.mvn/wrapper/maven-wrapper.jar


# User-specific stuff
kafka-java-introduce/.idea/**/workspace.xml
kafka-java-introduce/.idea/**/tasks.xml
kafka-java-introduce/.idea/**/usage.statistics.xml
kafka-java-introduce/.idea/**/dictionaries
kafka-java-introduce/.idea/**/shelf

# AWS User-specific
kafka-java-introduce/.idea/**/aws.xml

# Generated files
kafka-java-introduce/.idea/**/contentModel.xml

# Sensitive or high-churn files
kafka-java-introduce/.idea/**/dataSources/
kafka-java-introduce/.idea/**/dataSources.ids
kafka-java-introduce/.idea/**/dataSources.local.xml
kafka-java-introduce/.idea/**/sqlDataSources.xml
kafka-java-introduce/.idea/**/dynamic.xml
kafka-java-introduce/.idea/**/uiDesigner.xml
kafka-java-introduce/.idea/**/dbnavigator.xml

# Gradle
kafka-java-introduce/.idea/**/gradle.xml
kafka-java-introduce/.idea/**/libraries

# Gradle and Maven with auto-import
# When using Gradle or Maven with auto-import, you should exclude module files,
# since they will be recreated, and may cause churn.  Uncomment if using
# auto-import.
# .idea/artifacts
# .idea/compiler.xml
# .idea/jarRepositories.xml
# .idea/modules.xml
# .idea/*.iml
# .idea/modules
# *.iml
# *.ipr

# CMake
kafka-java-introduce/cmake-build-*/

# Mongo Explorer plugin
kafka-java-introduce/.idea/**/mongoSettings.xml

# File-based project format
**.iws

# IntelliJ
kafka-java-introduce/out/

# mpeltonen/sbt-idea plugin
kafka-java-introduce/.idea_modules/

# JIRA plugin
kafka-java-introduce/atlassian-ide-plugin.xml

# Cursive Clojure plugin
kafka-java-introduce/.idea/replstate.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
kafka-java-introduce/com_crashlytics_export_strings.xml
kafka-java-introduce/crashlytics.properties
kafka-java-introduce/crashlytics-build.properties
kafka-java-introduce/fabric.properties

# Editor-based Rest Client
kafka-java-introduce/.idea/httpRequests

# Android studio 3.1+ serialized cache file
kafka-java-introduce/.idea/caches/build_file_checksums.ser